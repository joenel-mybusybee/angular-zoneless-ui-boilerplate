import{d as m,e as a}from"./chunk-IZ3LLJO2.js";import{s as g}from"./chunk-ELZ3HLUI.js";import{Y as u,aa as h,e as p,i as c,q as l}from"./chunk-DQHNRFYU.js";var s=class extends Error{};s.prototype.name="InvalidTokenError";function E(o){return decodeURIComponent(atob(o).replace(/(.)/g,(r,e)=>{let t=e.charCodeAt(0).toString(16).toUpperCase();return t.length<2&&(t="0"+t),"%"+t}))}function b(o){let r=o.replace(/-/g,"+").replace(/_/g,"/");switch(r.length%4){case 0:break;case 2:r+="==";break;case 3:r+="=";break;default:throw new Error("base64 string is not of the correct length")}try{return E(r)}catch{return atob(r)}}function d(o,r){if(typeof o!="string")throw new s("Invalid token specified: must be a string");r||(r={});let e=r.header===!0?0:1,t=o.split(".")[e];if(typeof t!="string")throw new s(`Invalid token specified: missing part #${e+1}`);let i;try{i=b(t)}catch(n){throw new s(`Invalid token specified: invalid base64 for part #${e+1} (${n.message})`)}try{return JSON.parse(i)}catch(n){throw new s(`Invalid token specified: invalid json for part #${e+1} (${n.message})`)}}var f=class o extends m{constructor(e){super();this.http=e;this.loggedIn.next(!!this.getItem(this.ACCESS_TOKEN_KEY))}ACCESS_TOKEN_KEY="accessToken";REFRESH_TOKEN_KEY="refreshToken";loggedIn=new c(!1);login(e,t){let i=this.createCompleteRoute(a.auth.login);return this.http.post(i,e).pipe(l(n=>(n.accessToken&&(this.setItem(this.ACCESS_TOKEN_KEY,n.accessToken||""),this.setItem("isRemembered",t),this.loggedIn.next(!0)),n)))}logout(){this.loggedIn.next(!1),localStorage.clear()}setItem(e,t){localStorage.setItem(e,t)}getItem(e){return localStorage.getItem(e)}getTokenData(){let e=this.getItem(this.ACCESS_TOKEN_KEY);if(!e)return null;try{return d(e)}catch(t){return console.error("Failed to decode token",t),null}}getToken(){return this.getItem(this.ACCESS_TOKEN_KEY)}getRefreshToken(){return this.getItem(this.REFRESH_TOKEN_KEY)}setTokens(e,t){this.setItem(this.ACCESS_TOKEN_KEY,e),this.setItem(this.REFRESH_TOKEN_KEY,t)}refreshToken(e){let t=this.createCompleteRoute(a.auth.refreshToken);return this.http.post(t,{refreshToken:e})}isLoggedIn(){return new p(e=>{e.next(!!this.getToken()),e.complete()})}static \u0275fac=function(t){return new(t||o)(h(g))};static \u0275prov=u({token:o,factory:o.\u0275fac,providedIn:"root"})};export{f as a};
