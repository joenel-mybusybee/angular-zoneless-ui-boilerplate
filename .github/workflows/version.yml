on:
  release:
    types: [created]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  checks: write
  issues: write
  statuses: write

jobs:
  update-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code at tag
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

      - name: Get version
        id: get_version
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          else
            echo "VERSION=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
          fi

      - name: Update package.json version
        run: |
          # Remove 'v' prefix if present
          CLEAN_VERSION=$(echo $VERSION | sed 's/^v//')
          # Update package.json version
          npm version $CLEAN_VERSION --no-git-tag-version --allow-same-version

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: 'chore: update package.json version to ${{ env.VERSION }}'
          title: 'Update package.json version to ${{ env.VERSION }}'
          body: |
            Updates package.json version to match the latest release tag.

            - Version: ${{ env.VERSION }}
            - Auto-generated by version workflow
          branch: 'chore/update-version'
          base: 'main'
          delete-branch: true

      - name: Enable Pull Request Automerge
        if: steps.cpr.outputs.pull-request-number
        run: |
          # Configure git
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

          # First approve it
          gh pr review "${{ steps.cpr.outputs.pull-request-number }}" --approve

          # Then enable auto-merge
          gh pr merge "${{ steps.cpr.outputs.pull-request-number }}" --auto --squash --delete-branch
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
